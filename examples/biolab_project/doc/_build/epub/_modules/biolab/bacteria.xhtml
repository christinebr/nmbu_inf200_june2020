<!DOCTYPE html>

<html xmlns="http://www.w3.org/1999/xhtml" xmlns:epub="http://www.idpf.org/2007/ops">
  <head>
    <meta charset="utf-8" />
    <title>biolab.bacteria</title>
    <link rel="stylesheet" href="../../_static/epub.css" type="text/css" />
    <link rel="stylesheet" href="../../_static/pygments.css" type="text/css" /> 
  </head><body>

    <div class="document">
      <div class="documentwrapper">
          <div class="body" role="main">
            
  <h1>Source code for biolab.bacteria</h1><div class="highlight"><pre>
<span></span><span class="c1"># -*- coding: utf-8 -*-</span>

<span class="sd">&#39;&#39;&#39;</span>
<span class="sd">Implements a bacteria model.</span>
<span class="sd">&#39;&#39;&#39;</span>

<span class="kn">import</span> <span class="nn">random</span>


<div class="viewcode-block" id="Bacteria"><a class="viewcode-back" href="../../dish_and_bacteria.xhtml#biolab.bacteria.Bacteria">[docs]</a><span class="k">class</span> <span class="nc">Bacteria</span><span class="p">:</span>
    <span class="sd">&quot;&quot;&quot;Bacteria which die and multiply with fixed probabilities.&quot;&quot;&quot;</span>

    <span class="c1"># These parameters are defined at the class level</span>
    <span class="n">p_death</span> <span class="o">=</span> <span class="mf">0.1</span>   <span class="c1">#: probability of death per cycle</span>
    <span class="n">p_divide</span> <span class="o">=</span> <span class="mf">0.2</span>  <span class="c1">#: probability of cell division per cycle</span>

    <span class="n">default_params</span> <span class="o">=</span> <span class="p">{</span><span class="s1">&#39;p_death&#39;</span><span class="p">:</span> <span class="n">p_death</span><span class="p">,</span>
                      <span class="s1">&#39;p_divide&#39;</span><span class="p">:</span> <span class="n">p_divide</span><span class="p">}</span>

<div class="viewcode-block" id="Bacteria.set_params"><a class="viewcode-back" href="../../dish_and_bacteria.xhtml#biolab.bacteria.Bacteria.set_params">[docs]</a>    <span class="nd">@classmethod</span>
    <span class="k">def</span> <span class="nf">set_params</span><span class="p">(</span><span class="bp">cls</span><span class="p">,</span> <span class="n">new_params</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Set class parameters.</span>

<span class="sd">        Parameters</span>
<span class="sd">        ----------</span>
<span class="sd">        new_params : dict</span>
<span class="sd">            Legal keys: &#39;p_death&#39;, &#39;p_divide&#39;</span>

<span class="sd">        Raises</span>
<span class="sd">        ------</span>
<span class="sd">        ValueError, KeyError</span>
<span class="sd">        &quot;&quot;&quot;</span>

        <span class="k">for</span> <span class="n">key</span> <span class="ow">in</span> <span class="n">new_params</span><span class="p">:</span>
            <span class="k">if</span> <span class="n">key</span> <span class="ow">not</span> <span class="ow">in</span> <span class="p">(</span><span class="s1">&#39;p_death&#39;</span><span class="p">,</span> <span class="s1">&#39;p_divide&#39;</span><span class="p">):</span>
                <span class="k">raise</span> <span class="ne">KeyError</span><span class="p">(</span><span class="s1">&#39;Invalid parameter name: &#39;</span> <span class="o">+</span> <span class="n">key</span><span class="p">)</span>

        <span class="k">if</span> <span class="s1">&#39;p_death&#39;</span> <span class="ow">in</span> <span class="n">new_params</span><span class="p">:</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">new_params</span><span class="p">[</span><span class="s1">&#39;p_death&#39;</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">:</span>
                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;p_death must be in [0, 1].&#39;</span><span class="p">)</span>
            <span class="bp">cls</span><span class="o">.</span><span class="n">p_death</span> <span class="o">=</span> <span class="n">new_params</span><span class="p">[</span><span class="s1">&#39;p_death&#39;</span><span class="p">]</span>

        <span class="k">if</span> <span class="s1">&#39;p_divide&#39;</span> <span class="ow">in</span> <span class="n">new_params</span><span class="p">:</span>
            <span class="k">if</span> <span class="ow">not</span> <span class="mi">0</span> <span class="o">&lt;=</span> <span class="n">new_params</span><span class="p">[</span><span class="s1">&#39;p_divide&#39;</span><span class="p">]</span> <span class="o">&lt;=</span> <span class="mi">1</span><span class="p">:</span>
                <span class="k">raise</span> <span class="ne">ValueError</span><span class="p">(</span><span class="s1">&#39;p_divide must be in [0, 1].&#39;</span><span class="p">)</span>
            <span class="bp">cls</span><span class="o">.</span><span class="n">p_divide</span> <span class="o">=</span> <span class="n">new_params</span><span class="p">[</span><span class="s1">&#39;p_divide&#39;</span><span class="p">]</span></div>

<div class="viewcode-block" id="Bacteria.get_params"><a class="viewcode-back" href="../../dish_and_bacteria.xhtml#biolab.bacteria.Bacteria.get_params">[docs]</a>    <span class="nd">@classmethod</span>
    <span class="k">def</span> <span class="nf">get_params</span><span class="p">(</span><span class="bp">cls</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Get class parameters.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>
<span class="sd">        dict</span>
<span class="sd">            Dictionary with class parameters.</span>
<span class="sd">        &quot;&quot;&quot;</span>
        <span class="k">return</span> <span class="p">{</span><span class="s1">&#39;p_death&#39;</span><span class="p">:</span> <span class="bp">cls</span><span class="o">.</span><span class="n">p_death</span><span class="p">,</span> <span class="s1">&#39;p_divide&#39;</span><span class="p">:</span> <span class="bp">cls</span><span class="o">.</span><span class="n">p_divide</span><span class="p">}</span></div>

    <span class="k">def</span> <span class="nf">__init__</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;Create bacterium with age 0.&quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">age</span> <span class="o">=</span> <span class="mi">0</span>

<div class="viewcode-block" id="Bacteria.ages"><a class="viewcode-back" href="../../dish_and_bacteria.xhtml#biolab.bacteria.Bacteria.ages">[docs]</a>    <span class="k">def</span> <span class="nf">ages</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;Bacterium ages by one cycle.&quot;&quot;&quot;</span>
        <span class="bp">self</span><span class="o">.</span><span class="n">age</span> <span class="o">+=</span> <span class="mi">1</span></div>

<div class="viewcode-block" id="Bacteria.dies"><a class="viewcode-back" href="../../dish_and_bacteria.xhtml#biolab.bacteria.Bacteria.dies">[docs]</a>    <span class="k">def</span> <span class="nf">dies</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Decide whether bacterium dies.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>
<span class="sd">        bool</span>
<span class="sd">            True if bacterium dies.</span>
<span class="sd">        &quot;&quot;&quot;</span>

        <span class="k">return</span> <span class="n">random</span><span class="o">.</span><span class="n">random</span><span class="p">()</span> <span class="o">&lt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">p_death</span></div>

<div class="viewcode-block" id="Bacteria.divides"><a class="viewcode-back" href="../../dish_and_bacteria.xhtml#biolab.bacteria.Bacteria.divides">[docs]</a>    <span class="k">def</span> <span class="nf">divides</span><span class="p">(</span><span class="bp">self</span><span class="p">):</span>
        <span class="sd">&quot;&quot;&quot;</span>
<span class="sd">        Decide whether bacterium divides.</span>

<span class="sd">        Returns</span>
<span class="sd">        -------</span>
<span class="sd">        bool</span>
<span class="sd">            True if bacterium divides.</span>
<span class="sd">        &quot;&quot;&quot;</span>

        <span class="k">return</span> <span class="n">random</span><span class="o">.</span><span class="n">random</span><span class="p">()</span> <span class="o">&lt;</span> <span class="bp">self</span><span class="o">.</span><span class="n">p_divide</span></div></div>
</pre></div>

          </div>
      </div>
      <div class="clearer"></div>
    </div>
  </body>
</html>